---
- name: Create directories
  file:
   path: "{{ item }}"
   state: directory
   mode: 0755
  with_items:
    - "{{ data_dir }}/prometheus/data"
    - "{{ data_dir }}/prometheus/conf"
    - "{{ data_dir }}/alertmanager/conf"

- name: Copy Prometheus config
  template:
    src: prometheus.yml.j2
    dest: "{{ data_dir }}/prometheus/conf/prometheus.yml"
  notify: restart prometheus

- name: Copy Prometheus alert rules
  copy:
    src: alerts.yml
    dest: "{{ data_dir }}/prometheus/conf/alerts.yml"
  notify: restart prometheus

- name: Copy Alertmanager config
  template:
    src: alertmanager.yml.j2
    dest: "{{ data_dir }}/alertmanager/conf/alertmanager.yml"
  notify: restart alertmanager

- name: Copy Telegram_bot config
  template:
    src: telegram_bot_config.yml.j2
    dest: "{{ data_dir }}/alertmanager/conf/telegram_bot_config.yml"
  notify: restart prometheus_bot

- name: Copy Telegram_bot alerts template
  copy:
    src: template.tmpl
    dest: "{{ data_dir }}/alertmanager/conf/template.tmpl"
  notify: restart prometheus_bot

- name: Run Prometheus
  docker_container:
    name: prometheus
    user: root
    image: prom/prometheus:{{ prometheus_version }}
    volumes:
      - "{{ data_dir }}/prometheus/conf/:/etc/prometheus/:ro"
      - "{{ data_dir }}/prometheus/data/:/prometheus:rw"
    command:
        "--config.file=/etc/prometheus/prometheus.yml \
          --storage.tsdb.path=/prometheus \
          --storage.tsdb.retention=90d \
          --web.console.libraries=/usr/share/prometheus/console_libraries \
          --web.console.templates=/usr/share/prometheus/consoles \
          --web.external-url=http://0.0.0.0/prometheus/ \
          --web.enable-admin-api \
          --web.route-prefix=/prometheus/"
          #              --storage.local.target-heap-size=268697600"
    restart_policy: unless-stopped
    network_mode: host

- name: Run Telegram_bot
  docker_container:
    name: prometheus_bot
    image: "pharlan/prometheus_bot"
    state: started
    restart_policy: unless-stopped
    network_mode: host
    volumes:
      - "{{ data_dir }}/alertmanager/conf/telegram_bot_config.yml:/config.yaml:ro"
      - "{{ data_dir }}/alertmanager/conf/template.tmpl:/template.tmpl:ro"

- name: Run Alertmanager
  docker_container:
    name: alertmanager
    image: "prom/alertmanager:{{ alertmanager_version }}"
    state: started
    restart_policy: unless-stopped
    network_mode: host
    command: "--config.file=/etc/alertmanager/alertmanager.yml"
#              --web.external-url=http://0.0.0.0/alertmanager/"
    volumes:
      - "{{ data_dir }}/alertmanager/conf/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro"
