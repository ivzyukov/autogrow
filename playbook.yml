---
- hosts: all

  handlers:
    - name: restart prometheus
      shell: "docker restart prometheus"

    - name: restart openvpn-monitor
      shell: "docker restart openvpn-monitor"

    - name: restart nginx
      shell: "docker restart nginx"

    - name: restart grafana
      shell: "docker restart grafana"

  tasks:
    - name: Install tools
      apt: name={{ item }} state=present
      with_items:
        - vim
        - htop
        - tree
        - sysstat
        - tcpdump
        - rsync

    - name: Install docker-py module for python3
      pip: 
        name: docker-py

    - name: create directories for containers
      file: 
       path: "{{ item }}" 
       state: directory 
       mode: 0755
      with_items:
        - /srv/prometheus/conf
        - /srv/prometheus/data
        - /srv/openvpn-monitor/conf
        - /srv/nginx/conf/html
        - /srv/grafana/data
        - /srv/grafana/conf
        - /srv/grafana/log
      tags: always

    - name: Copy Prometheus config
      copy: 
        src: prometheus.yml
        dest: /srv/prometheus/conf/prometheus.yml
      notify: restart prometheus

    - name: Run Prometheus
      docker_container:
        name: prometheus
        image: rycus86/prometheus
        volumes:
          - /srv/prometheus/conf/:/etc/prometheus/:ro
          - /srv/prometheus/data/:/prometheus:rw
        command:
            "--config.file=/etc/prometheus/prometheus.yml \
              --storage.tsdb.path=/prometheus \
              --storage.tsdb.retention=30d \
              --web.console.libraries=/usr/share/prometheus/console_libraries \
              --web.console.templates=/usr/share/prometheus/consoles \
              --web.external-url=http://0.0.0.0/prometheus/ \
              --web.route-prefix=/prometheus/"
              #              --storage.local.target-heap-size=268697600"
        restart_policy: unless-stopped
        network_mode: host

    - name: Run Node Exporter
      docker_container:
        name: node_exporter
        privileged: yes
        image: rycus86/prometheus-node-exporter
        volumes:
          - "/proc:/host/proc:ro"
          - "/sys:/host/sys:ro"
          - "/:/rootfs:ro"
        command: 
            "--path.procfs=/host/proc \ 
            --path.sysfs=/host/sys \
            --collector.filesystem.ignored-mount-points=^/(sys|proc|devtmpfs|host|etc|tmpfs)($|/)"            
        restart_policy: unless-stopped
        network_mode: host

    - name: Copy grafana config
      copy:
        src: templates/grafana.ini
        dest: /srv/grafana/conf/grafana.ini
      notify: restart grafana
      tags: grafana

    - name: Run Grafana
      docker_container:
        name: grafana
        user: root
        image: fg2it/grafana-armhf:v5.1.4   
        volumes:
          - "/srv/grafana/conf/grafana.ini:/etc/grafana/grafana.ini:ro"
          - "/srv/grafana/data:/var/lib/grafana:rw"
          - "/srv/grafana/log:/var/log/grafana:rw"
        env: {"GF_SECURITY_ADMIN_USER": "admin", "GF_SECURITY_ADMIN_PASSWORD": "admin", "GF_USERS_ALLOW_SIGN_UP": false}
        restart_policy: unless-stopped
        network_mode: host
      tags: grafana

    - name: Copy openvpn-monitor config
      copy:
        src: templates/openvpn-monitor.conf
        dest: /srv/openvpn-monitor/openvpn-monitor.conf
      notify: restart openvpn-monitor
      tags: openvpn

    - name: Run openvpn-monitor
      docker_container:
        name: openvpn-monitor
        image: pharlan/docker-openvpn-monitor-arm
        volumes:
          - "/srv/openvpn-monitor/openvpn-monitor.conf:/openvpn-monitor/openvpn-monitor.conf:ro"
        restart_policy: unless-stopped
        network_mode: host
      tags: openvpn

    - name: Copy nginx configs
      copy: 
        src: templates/nginx.conf
        dest: /srv/nginx/conf/nginx.conf
      notify: restart nginx
      tags: nginx

    - name: Copy Web page
      copy:
        src: page/
        dest: /srv/nginx/conf/html
      notify: restart nginx    
      tags: nginx    

    - name: Run nginx
      docker_container:
        name: nginx
        image: arm32v7/nginx
        volumes:
          - "/srv/nginx/conf/html:/usr/share/nginx/html:ro"
          - "/srv/nginx/conf/nginx.conf:/etc/nginx/conf.d/default.conf:ro"
        restart_policy: unless-stopped
        network_mode: host
      tags: nginx


### This is for the ARM Raspbian Version 
#  https://docs.docker.com/install/linux/docker-ce/debian/#install-using-the-convenience-script
#- name: Download Docker installation script
#  hosts: all
#  tasks:
#    - get_url:
#        url: https://get.docker.com
#        dest: /tmp/get_docker.sh
#        mode: 0744
#    - command: "sh /tmp/get_docker.sh"
#
### This is for the x86 version
#- name: Install Docker-ce for x86 arch
#  hosts: all
#  tasks:
#  - name: Install prerequisites
#    apt: name={{item}} update_cache=yes
#    with_items:
#     - apt-transport-https
#     - ca-certificates
#     - curl
#     - software-properties-common
#  - name: Add Docker GPG key
#    apt_key: url=https://download.docker.com/linux/debian/gpg
#  - name: Add Docker APT repository
#    apt_repository:
#      repo: deb [arch=amd64] https://download.docker.com/linux/debian {{ansible_distribution_release}} stable
#  - name: install docker
#    package:
#      name: docker-ce
#      state: present














     

