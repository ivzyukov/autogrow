---
- name: Install tools
  hosts: all
  tasks:
    - apt: name={{ item }} state=present
      with_items:
        - vim
        - htop
        - tree
        - sysstat
        - tcpdump
        - rsync

- name: debug various
  hosts: all
  tasks: 
    - debug:
        msg: "for various debug purposes, like variables printing {{ data_dir }}"

### This is for the ARM Raspbian Version 
#  https://docs.docker.com/install/linux/docker-ce/debian/#install-using-the-convenience-script
- name: Download Docker installation script
  hosts: all
  tasks:
    - get_url:
        url: https://get.docker.com
        dest: /tmp/get_docker.sh
        mode: 0744
    - command: "sh /tmp/get_docker.sh"

# This is for the x86 version
#- name: Install Docker-ce for x86 arch
#  hosts: all
#  tasks:
#  - name: Install prerequisites
#    apt: name={{item}} update_cache=yes
#    with_items:
#     - apt-transport-https
#     - ca-certificates
#     - curl
#     - software-properties-common
#  - name: Add Docker GPG key
#    apt_key: url=https://download.docker.com/linux/debian/gpg
#  - name: Add Docker APT repository
#    apt_repository:
#      repo: deb [arch=amd64] https://download.docker.com/linux/debian {{ansible_distribution_release}} stable
#  - name: install docker
#    package:
#      name: docker-ce
#      state: present

- name: Install docker-py module for python3
  hosts: all
  tasks:
    - pip: 
        name: docker-py

- name: Create and connect Prometheus container to network
  hosts: all
  tasks:
    - docker_container:
        name: Prometheus
        # x86 version
        #image: prom/prometheus:latest
        image: rycus86/prometheus
        volumes:
          - ./prometheus/:/etc/prometheus/
          - prometheus_data:/prometheus
        #exposed_ports: 
        #  - 9090
        #published_ports: 
        #  - "9090:9090"
        command: [
            "--config.file=/etc/prometheus/prometheus.yml", 
            "--storage.tsdb.path=/prometheus",
            "--web.console.libraries=/etc/prometheus/console_libraries",
            "--web.console.templates=/etc/prometheus/consoles",
            "--storage.tsdb.retention=1h",
            "--web.enable-lifecycle",
                ]
        #restart: yes
        #restart_policy: unless-stopped
        network_mode: host

- name: Upload prometheus.yml to host
  hosts: all
  tasks:
    - copy: 
        src: prometheus.yml
        dest: /home/pi/prometheus
        owner: root
        group: root
        mode: 0755
  tags: nodexp

- name: Create and connect Node Exporter container to network
  hosts: all
  tasks:
    - docker_container:
        name: NodeExporter
        # x86 version
        #image: prom/node-exporter:latest
        privileged: yes
        image: rycus86/prometheus-node-exporter
        volumes:
          - "/proc:/host/proc:ro"
          - "/sys:/host/sys:ro"
          - "/:/rootfs:ro"
        #exposed_ports:  
        #  - 9100
        command: [
            "--path.procfs=/host/proc", 
            "--path.sysfs=/host/sys",
            "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)",
                ]
        restart: yes
        restart_policy: unless-stopped
        network_mode: host
  tags: nodexp

- name: Create and connect Grafana container to network
  hosts: all
  tasks:
    - docker_container:
        name: Grafana
        image: fg2it/grafana-armhf:v5.1.4   
        volumes:
          - "grafana_data:/var/lib/grafana"
          - "./grafana/datasources:/etc/grafana/datasources"
          - "./grafana/dashboards:/etc/grafana/dashboards"
          - "./grafana/setup.sh:/setup.sh"
        #exposed_ports: 
        #  - 3000
        #published_ports: 
        #  - "3000:3000"
        env: {"GF_SECURITY_ADMIN_USER": "admin", "GF_SECURITY_ADMIN_PASSWORD": "admin", "GF_USERS_ALLOW_SIGN_UP": false}
        restart: yes
        restart_policy: unless-stopped
        network_mode: host
